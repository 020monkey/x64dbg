#pragma once

//
// Memory Manager defines
//
// http://doxygen.reactos.org/d4/d33/ntoskrnl_2mm_2amd64_2page_8c_source.html
// http://doxygen.reactos.org/da/d30/ntoskrnl_2include_2internal_2amd64_2mm_8h_source.html
//

#define PAGE_SHIFT				(KdState.OS.PageShift)
#define PAGE_SIZE				(KdState.OS.PageSize)
#define PAGE_ALIGN(Va)			((ULONG_PTR)((ULONG_PTR)(Va) & ~(PAGE_SIZE - 1)))
#define BYTES_TO_PAGES(Size)	(((Size) >> PAGE_SHIFT) + (((Size) & (PAGE_SIZE - 1)) != 0))
#define ROUND_TO_PAGES(Size)	(((ULONG_PTR)(Size) + PAGE_SIZE - 1) & ~(PAGE_SIZE - 1))

#define MM_HIGHEST_USER_ADDRESS			(KdDebuggerData.MmHighestUserAddress)
#define MM_SYSTEM_RANGE_START			(KdDebuggerData.MmSystemRangeStart)
#define MM_USER_PROBE_ADDRESS			(KdDebuggerData.MmUserProbeAddress)

#define MM_HIGHEST_USER_ADDRESS_WOW64	(0x7FFEFFFF)
#define MM_SYSTEM_RANGE_START_WOW64		(0x80000000)

#define MM_SHARED_USER_DATA_VA			(0x7FFE0000)

#define MI_VPN_TO_VA(Vpn)				((Vpn) << PAGE_SHIFT)
#define MI_VA_TO_VPN(Va)				((Va) >> PAGE_SHIFT)

#define MI_LOWEST_VAD_ADDRESS			((ULONG_PTR)0x000000007FF00000ULL)
#define MM_HIGHEST_VAD_ADDRESS			((ULONG_PTR)((ULONG_PTR)MM_HIGHEST_USER_ADDRESS - (16 * PAGE_SIZE)))

const static ULONG MmProtectToValue[/* 32 */] =
{
	PAGE_NOACCESS,
	PAGE_READONLY,
	PAGE_EXECUTE,
	PAGE_EXECUTE_READ,
	PAGE_READWRITE,
	PAGE_WRITECOPY,
	PAGE_EXECUTE_READWRITE,
	PAGE_EXECUTE_WRITECOPY,
	PAGE_NOACCESS,
	PAGE_NOCACHE | PAGE_READONLY,
	PAGE_NOCACHE | PAGE_EXECUTE,
	PAGE_NOCACHE | PAGE_EXECUTE_READ,
	PAGE_NOCACHE | PAGE_READWRITE,
	PAGE_NOCACHE | PAGE_WRITECOPY,
	PAGE_NOCACHE | PAGE_EXECUTE_READWRITE,
	PAGE_NOCACHE | PAGE_EXECUTE_WRITECOPY,
	PAGE_NOACCESS,
	PAGE_GUARD | PAGE_READONLY,
	PAGE_GUARD | PAGE_EXECUTE,
	PAGE_GUARD | PAGE_EXECUTE_READ,
	PAGE_GUARD | PAGE_READWRITE,
	PAGE_GUARD | PAGE_WRITECOPY,
	PAGE_GUARD | PAGE_EXECUTE_READWRITE,
	PAGE_GUARD | PAGE_EXECUTE_WRITECOPY,
	PAGE_NOACCESS,
	PAGE_WRITECOMBINE | PAGE_READONLY,
	PAGE_WRITECOMBINE | PAGE_EXECUTE,
	PAGE_WRITECOMBINE | PAGE_EXECUTE_READ,
	PAGE_WRITECOMBINE | PAGE_READWRITE,
	PAGE_WRITECOMBINE | PAGE_WRITECOPY,
	PAGE_WRITECOMBINE | PAGE_EXECUTE_READWRITE,
	PAGE_WRITECOMBINE | PAGE_EXECUTE_WRITECOPY,
};